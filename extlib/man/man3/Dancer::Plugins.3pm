.\" Automatically generated by Pod::Man 2.23 (Pod::Simple 3.14)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Dancer::Plugins 3"
.TH Dancer::Plugins 3 "2011-08-17" "perl v5.12.4" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Dancer::Plugins \- interesting plugins to add to Dancer's capabilities
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Dancer aims to keep the core as small as possible, but there are a growing
number of useful plugins to add helpful features.
.PP
This document provides a quick summary of some recommended plugins.
.SH "PLUGINS"
.IX Header "PLUGINS"
.IP "Dancer::Plugin::Database" 4
.IX Item "Dancer::Plugin::Database"
Provides easy database access via \s-1DBI\s0, reading the \s-1DB\s0 connection details from
your app's config file, and taking care of ensuring the connection is still valid
and reconnecting if not (useful in persistent environments).  Just calling the
\&\f(CW\*(C`database\*(C'\fR keyword gives you a connected and working database handle. It also
provides some helpful keywords to make inserting/updating data as simple as it
should be.
.IP "Dancer::Plugin::DBIC" 4
.IX Item "Dancer::Plugin::DBIC"
Provides easy acces to DBIx::Class database virtualization.
.IP "Dancer::Plugin::Auth::RBAC" 4
.IX Item "Dancer::Plugin::Auth::RBAC"
Dancer Authentication, Security and Role-Based Access Control Framework.
.IP "Dancer::Plugin::Email" 4
.IX Item "Dancer::Plugin::Email"
Provides easy email-sending powered by Email::Send \- simply call the \f(CW\*(C`email\*(C'\fR
keyword.  Email sending settings can be taken from your app's config.
.IP "Dancer::Plugin::SMS" 4
.IX Item "Dancer::Plugin::SMS"
Send \s-1SMS\s0 text messages to mobile phones from your Dancer app, using any service
supported by SMS::Send.
.IP "Dancer::Plugin::Ajax" 4
.IX Item "Dancer::Plugin::Ajax"
Provides easy way to add Ajax route handlers.
.IP "Dancer::Plugin::REST" 4
.IX Item "Dancer::Plugin::REST"
Makes writing RESTful web services easy.
.IP "Dancer::Plugin::SiteMap" 4
.IX Item "Dancer::Plugin::SiteMap"
Automatically provides site maps (as a \s-1HTML\s0 page, or as an \s-1XML\s0 sitemap ready for
Google) based on the routes your app defines.
.IP "Dancer::Plugin::Validation" 4
.IX Item "Dancer::Plugin::Validation"
Easy data validation powered by Oogly.
.IP "Dancer::Plugin::Params::Normalization" 4
.IX Item "Dancer::Plugin::Params::Normalization"
Provides different ways of normalizing parameter names
.IP "Dancer::Plugin::SimpleCRUD" 4
.IX Item "Dancer::Plugin::SimpleCRUD"
Provides easy \s-1CRUD\s0 (create, read, update, delete) facilities, automatically
creating routes to display, add, edit and delete data from a database table.
.IP "Dancer::Plugin::WebSocket" 4
.IX Item "Dancer::Plugin::WebSocket"
Supports building apps using Web Sockets for bi-directional, full-duplex
communications over a long-lived socket connection.
.IP "Dancer::Plugin::Memcached" 4
.IX Item "Dancer::Plugin::Memcached"
Cache page responses or individual items of data with memcached for performance.
.IP "Dancer::Plugin::MobileDevice" 4
.IX Item "Dancer::Plugin::MobileDevice"
Quickly determine whether the client is a mobile browser, in order to offer a
simplified layout, or otherwise customise features.
.IP "Dancer::Plugin::NYTProf" 4
.IX Item "Dancer::Plugin::NYTProf"
Provides dead-simple profiling of your app using Devel::NYTProf \- enables
profiling for each request individually, serves up a list of profiling runs, and
generates & sends the \s-1HTML\s0 reports produced by \f(CW\*(C`nytprofhtml\*(C'\fR.
.IP "Dancer::Plugin::Bcypt" 4
.IX Item "Dancer::Plugin::Bcypt"
Provides simple effective password hashing and validation using Bcrypt.
.IP "Dancer::Plugin::Cache::CHI" 4
.IX Item "Dancer::Plugin::Cache::CHI"
Provides caching for generated pages and/or arbitrary data.  Uses \s-1CHI\s0, so is
backend-agnostic \- caching can be done in memory, to files, using Memcache, in a
database, or any other method for which there is a CHI::Driver module.
.IP "Dancer::Plugin::Thumbnail" 4
.IX Item "Dancer::Plugin::Thumbnail"
Easy thumbnail generation using \s-1GD\s0.
.IP "Dancer::Plugin::Captcha::SecurityImage" 4
.IX Item "Dancer::Plugin::Captcha::SecurityImage"
Easy \s-1CAPTCHA\s0 image generation and validation, using \s-1GD\s0.
.IP "Dancer::Plugin::Facebook" 4
.IX Item "Dancer::Plugin::Facebook"
Easily work with Facebook's Graph \s-1API\s0 from your Perl Dancer app.  Uses
Facebook::Graph.
.IP "Dancer::PLugin::Redis" 4
.IX Item "Dancer::PLugin::Redis"
Easy Redis database connections, based upon Dancer::Plugin::Database.
.IP "Dancer::Plugin::XML::RSS" 4
.IX Item "Dancer::Plugin::XML::RSS"
Easy \s-1XML\s0 \s-1RSS\s0 creation and consumption.
.PP
More plugins are appearing on \s-1CPAN\s0 all the time \- just search for
\&\f(CW\*(C`Dancer::Plugin\*(C'\fR to see what may have been released since this document was
last updated!
